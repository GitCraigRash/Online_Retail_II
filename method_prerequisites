Method 1:
  wrangle():
  df['StockCode'] = OrdinalEncoder().fit_transform(df['StockCode'])
  df['Country'] = OrdinalEncoder().fit_transform(df['Country'])
  unique_countries = df["Country"].unique()

  results = []
  for i in unique_countries:
    count_spend = df['TotalSpending'].loc[df['Country']==i]
    results.append(sum(count_spend))

  countries_by_spending = df.groupby("Country")["TotalSpending"].sum().reset_index()\
           .sort_values(by="TotalSpending",ascending=False).reset_index(drop=True)
  combined_list=list(zip(unique_countries,results))
  Rankings=pd.DataFrame(combined_list,columns=["Country","total_spending"])

  Rankings=list(zip(results,unique_countries))
  a=pd.DataFrame(Rankings,columns=["total_spending","countries"])
  a.sort_values("total_spending",ascending=False).reset_index(drop=True)

Method 2
  Kndf=df.dropna(subset=["Customer ID"]).reset_index()

  customer_spending=Kndf.groupby("Customer ID")["TotalSpending"].sum().reset_index().sort_values(by="TotalSpending",ascending=False)
  customer_spending["index"]=np.arange(0,len(customer_spending))
  customer_spending.set_index("index",inplace=True)

  high_paying_customers=[]
  start_sum=16648292.388
  for r in range(len(customer_spending)):
    if start_sum > 16648292.388*.10:
      start_sum=start_sum-customer_spending["TotalSpending"][r]
      #high_paying_customers.append(customer_spending["Customer ID"][r])
      continue
    high_paying_customers=customer_spending["Customer ID"][:r]
    break
  high_paying_customers
